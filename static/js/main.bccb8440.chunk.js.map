{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navigation/Navigation.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleLink/PeopleLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","end","className","isActive","classNames","Navigation","role","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleLink","person","location","useLocation","pathname","name","sex","born","died","slug","PeopleTable","people","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useEffect","peopleFromServer","data","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bccb8440.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  to: string;\n  text: string;\n  end: boolean;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text, end }) => (\n  <NavLink\n    to={to}\n    end={end}\n    className={({ isActive }) => classNames(\n      'navbar-item', { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" end />\n        <PageNavLink to=\"people\" text=\"People\" end={false} />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1>Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PeopleLink: FC<Props> = ({\n  person,\n}) => {\n  const location = useLocation().pathname;\n  const {\n    name,\n    sex,\n    born,\n    died,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-grey-lighter': `/people/${slug}` === location },\n      )}\n    >\n      <td>\n        <NavLink\n          to={`/people/${slug}`}\n          className={classNames(\n            { 'has-text-danger': sex === 'f' },\n          )}\n        >\n          {name}\n        </NavLink>\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PeopleLink } from '../PeopleLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map((person) => (\n          <PeopleLink person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const peopleFromServer = async () => {\n      try {\n        const data = await getPeople();\n\n        setPeople(data);\n      } catch {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    peopleFromServer();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">\n        People Page\n      </h1>\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n        {error && <p className=\"has-text-danger\">Something went wrong</p>}\n        {!isLoading && people.length < 1 && !error && (\n          <p>There are no people on the server</p>\n        )}\n\n        {people && people.length > 0 && <PeopleTable people={people} />}\n\n      </div>\n    </div>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}